var a=Object.defineProperty,h=Object.getOwnPropertyDescriptor,l=(t,s,i,r)=>{for(var e=r>1?void 0:r?h(s,i):s,o=t.length-1,n;o>=0;o--)(n=t[o])&&(e=(r?n(s,i,e):n(e))||e);return r&&e&&a(s,i,e),e};import{LitElement as c,html as p,css as d,customElement as u}from"../web_modules/lit-element.js";import{style as m}from"./mwc-list-item-css.js";const f=.4,w=5;class y{constructor(){this.#t=[],this.#s=50}#t;#s;_pruneHistory(t){const s=this.#t.findIndex(i=>i.timeStamp>t-this.#s);this.#t.splice(0,s+1)}update(t,s){this._pruneHistory(s),this.#t.push({x:t,timeStamp:s});const i=this.#t[0],r=t-i.x,e=s-i.timeStamp;return{velocityX:e>0?r/e:0}}}export let DismissableItem=class extends c{constructor(){super();this.tracker=null,this.wrapper=null,this.scroller=null,this.scrollerOverflow="",this.position=0,this.itemIndex=0,this.width=0,this.startX=0,this.startY=0,this.startPosition=0,this.state="initial",this.addEventListener("touchstart",this,{passive:!0}),this.addEventListener("touchmove",this,{passive:!0}),this.addEventListener("touchend",this,{passive:!0}),this.addEventListener("pointerdown",this,{passive:!0}),this.addEventListener("pointermove",this,{passive:!0}),this.addEventListener("pointerup",this,{passive:!0})}render(){return p`
      <div id="contentWrapper" class="mdc-list-item">
        <slot></slot>
      </div>
    `}firstUpdated(){this.wrapper=this.shadowRoot.querySelector("#contentWrapper")}disconnectedCallback(){this.scroller=null}handleEvent(t){if("pointerType"in t&&t.pointerType!=="touch")return;switch(t.type){case"pointerdown":this._onPointerDown(t);break;case"pointermove":t.pressure&&(this.setPointerCapture(t.pointerId),this._onPointerPan(t,t.timeStamp));break;case"pointerup":this.releasePointerCapture(t.pointerId),this._onPointerUp(t,t.timeStamp);break;case"touchstart":this._onPointerDown(t.changedTouches[0]);break;case"touchmove":this._onPointerPan(t.changedTouches[0],t.timeStamp);break;case"touchend":this._onPointerUp(t.changedTouches[0],t.timeStamp);break}}setPosition(t){this.position=t,this.width=this.offsetWidth,this.wrapper.style.opacity=String((this.width-Math.abs(t))/this.width),this.wrapper.style.transform=`translateX(${t}px)`}_dismiss(){this.style.opacity="0";const t=getComputedStyle(this).height,s=this.animate({height:[t,"0px"]},{duration:100,iterations:1,fill:"forwards"});s.onfinish=()=>{this.setPosition(0),this.style.opacity="1";const i=new CustomEvent("remove",{detail:{itemIndex:this.itemIndex},bubbles:!0});this.dispatchEvent(i)}}settle(t){if(this.state="initial",t===this.position)return;const s=t!==0,i=this.wrapper.animate({transform:[`translateX(${this.position}px)`,`translateX(${t}px)`],opacity:[parseFloat(this.wrapper.style.opacity),s?0:1]},{duration:Math.abs(t-this.position)*.5,iterations:1});this.position=t,i.onfinish=()=>s?this._dismiss():this.setPosition(0)}fling(t){this.state="initial";const s=t<0?-this.width:this.width,i=this.wrapper.animate({transform:[`translateX(${this.position}px)`,`translateX(${s}px)`],opacity:[parseFloat(this.wrapper.style.opacity),0]},{duration:Math.abs(s-this.position)/Math.abs(t),iterations:1});i.onfinish=this._dismiss.bind(this)}_settleToClosestPosition(){const t=this.position/this.width;t>.5?this.settle(this.width):t<-.5?this.settle(-this.width):this.settle(0)}_onPointerDown(t){this.state="initial",this.startX=t.clientX,this.startY=t.clientY,this.startPosition=0}_onPointerPan(t,s){if(this.state=="initial"){const i=t.clientX-this.startX,r=t.clientY-this.startY;if(i**2+r**2<w**2)return;if(Math.abs(r)>Math.abs(i)){this.state="ignoring";return}this.state="dragging",this.scroller||(this.scroller=this.offsetParent,this.scrollerOverflow=this.scroller.style.overflow),this.scroller.style.overflow="hidden"}if(this.state=="dragging"){this.tracker=this.tracker||new y,this.tracker.update(t.clientX,s);const i=t.clientX-this.startX;this.setPosition(this.startPosition+i)}}_onPointerUp(t,s){if(this.state=="dragging"){this.scroller.style.overflow=this.scrollerOverflow;const i=this.tracker.update(t.clientX,s).velocityX;this.tracker=null,Math.abs(i)>f?this.fling(i):this._settleToClosestPosition()}}};DismissableItem.styles=[m,d`
      :host {
        overflow: hidden;
      }
      #contentWrapper {
        contain: content;
        will-change: transform, opacity;
        background-color: var(--item-bg-color);
        width: 100%;
        height: 100%;
      }
    `],DismissableItem=l([u("dismissable-item")],DismissableItem);
