var h=Object.defineProperty,l=Object.getOwnPropertyDescriptor,a=(t,i,s,o)=>{for(var e=o>1?void 0:o?l(i,s):i,r=t.length-1,n;r>=0;r--)(n=t[r])&&(e=(o?n(i,s,e):n(e))||e);return o&&e&&h(i,s,e),e};import{LitElement as c,html as p,css as d,customElement as u}from"../web_modules/lit-element.js";import{query as m}from"../web_modules/lit-element/lib/decorators.js";import{style as f}from"./mwc-list-item-css.js";const w=.4,y=5;class b{constructor(){this.#t=[],this.#i=50}#t;#i;_pruneHistory(t){const i=this.#t.findIndex(s=>s.timeStamp>t-this.#i);this.#t.splice(0,i+1)}update(t,i){this._pruneHistory(i),this.#t.push({x:t,timeStamp:i});const s=this.#t[0],o=t-s.x,e=i-s.timeStamp;return{velocityX:e>0?o/e:0}}}export let DismissableItem=class extends c{constructor(){super();this.tracker=null,this.scroller=null,this.scrollerOverflow="",this.position=0,this.itemIndex=0,this.width=0,this.startX=0,this.startY=0,this.startPosition=0,this.state="initial",this.addEventListener("touchstart",this,{passive:!0}),this.addEventListener("touchmove",this,{passive:!0}),this.addEventListener("touchend",this,{passive:!0}),this.addEventListener("pointerdown",this,{passive:!0}),this.addEventListener("pointermove",this,{passive:!0}),this.addEventListener("pointerup",this,{passive:!0})}render(){return p`
      <div id="contentWrapper" class="mdc-list-item">
        <slot></slot>
      </div>
    `}disconnectedCallback(){this.scroller=null}handleEvent(t){if("pointerType"in t&&t.pointerType!=="touch")return;switch(t.type){case"pointerdown":this._onPointerDown(t);break;case"pointermove":t.pressure&&(this.setPointerCapture(t.pointerId),this._onPointerPan(t,t.timeStamp));break;case"pointerup":this.releasePointerCapture(t.pointerId),this._onPointerUp(t,t.timeStamp);break;case"touchstart":this._onPointerDown(t.changedTouches[0]);break;case"touchmove":this._onPointerPan(t.changedTouches[0],t.timeStamp);break;case"touchend":this._onPointerUp(t.changedTouches[0],t.timeStamp);break}}setPosition(t){this.position=t,this.width=this.offsetWidth,this.wrapper.style.opacity=String((this.width-Math.abs(t))/this.width),this.wrapper.style.transform=`translateX(${t}px)`}_dismiss(){this.style.opacity="0";const t=getComputedStyle(this).height,i=this.animate({height:[t,"0px"]},{duration:100,iterations:1,fill:"forwards"});i.onfinish=()=>{this.setPosition(0),this.style.opacity="1";const s=new CustomEvent("remove",{detail:{itemIndex:this.itemIndex},bubbles:!0});this.dispatchEvent(s)}}settle(t){if(this.state="initial",t===this.position)return;const i=t!==0,s=this.wrapper.animate({transform:[`translateX(${this.position}px)`,`translateX(${t}px)`],opacity:[parseFloat(this.wrapper.style.opacity),i?0:1]},{duration:Math.abs(t-this.position)*.5,iterations:1});this.position=t,s.onfinish=()=>i?this._dismiss():this.setPosition(0)}fling(t){this.state="initial";const i=t<0?-this.width:this.width,s=this.wrapper.animate({transform:[`translateX(${this.position}px)`,`translateX(${i}px)`],opacity:[parseFloat(this.wrapper.style.opacity),0]},{duration:Math.abs(i-this.position)/Math.abs(t),iterations:1});s.onfinish=this._dismiss.bind(this)}_settleToClosestPosition(){const t=this.position/this.width;t>.5?this.settle(this.width):t<-.5?this.settle(-this.width):this.settle(0)}_onPointerDown(t){this.state="initial",this.startX=t.clientX,this.startY=t.clientY,this.startPosition=0}_onPointerPan(t,i){if(this.state=="initial"){const s=t.clientX-this.startX,o=t.clientY-this.startY;if(s**2+o**2<y**2)return;if(Math.abs(o)>Math.abs(s)){this.state="ignoring";return}this.state="dragging",this.scroller||(this.scroller=this.offsetParent,this.scrollerOverflow=this.scroller.style.overflow),this.scroller.style.overflow="hidden"}if(this.state=="dragging"){this.tracker=this.tracker||new b,this.tracker.update(t.clientX,i);const s=t.clientX-this.startX;this.setPosition(this.startPosition+s)}}_onPointerUp(t,i){if(this.state=="dragging"){this.scroller.style.overflow=this.scrollerOverflow;const s=this.tracker.update(t.clientX,i).velocityX;this.tracker=null,Math.abs(s)>w?this.fling(s):this._settleToClosestPosition()}}};DismissableItem.styles=[f,d`
      :host {
        overflow: hidden;
      }
      #contentWrapper {
        contain: content;
        will-change: transform, opacity;
        background-color: var(--item-bg-color);
        width: 100%;
        height: 100%;
      }
    `],a([m("#contentWrapper")],DismissableItem.prototype,"wrapper",2),DismissableItem=a([u("dismissable-item")],DismissableItem);
